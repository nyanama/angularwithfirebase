{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,q5BAAq5B,eAAe,yBAAyB,eAAe,yBAAyB,gBAAgB,yBAAyB,cAAc,yBAAyB,mBAAmB,yBAAyB,eAAe,yQ;;;;;;;;;;;;;;;;;;;;;;;;;ACAtkC;AACkB;AAQ5D;IAGE,sBAAY,EAAuB;QAAnC,iBAQC;QATD,iBAAY,GAAG,IAAI,KAAK,EAAE,CAAC;QAEzB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEL,CAAC;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIgB,yEAAmB;OAHxB,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmC;AACX;AACS;AACjB;AAEM;AACiB;AAgBhE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;gBACrD,+EAAyB;aAC1B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACtBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAC;QACP,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,oCAAoC;QAChD,WAAW,EAAE,2CAA2C;QACxD,SAAS,EAAE,oBAAoB;QAC/B,aAAa,EAAE,gCAAgC;QAC/C,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACtBpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<nav class=\\\"navbar fixed-top navbar-light bg-warning\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\">Displaying Data from Firebase using Angular 4</a>\\n        <form class=\\\"form-inline\\\">\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n          <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n    </div>\\n  </nav>\\n\\n\\n  <div class=\\\"container table-responsive\\\">          \\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th>Description</th>\\n            <th>Area</th>\\n            <th>Price</th>\\n            <th>#Bed</th>\\n            <th>#Kitchen</th>\\n            <th>#Bath</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          \\n          <tr *ngFor=\\\"let property of propertyList\\\">\\n            <td>{{property.desc}}</td>\\n            <td>{{property.area}}</td>\\n            <td>{{property.price}}</td>\\n            <td>{{property.bed}}</td>\\n            <td>{{property.kitchens}}</td>\\n            <td>{{property.bath}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      </div>\\n\\n  <nav class=\\\"navbar fixed-bottom navbar-light bg-warning\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Copyright Â© 2018 Nagendra</a>\\n    </div>\\n  </nav>\"","import { Component } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  properties : Observable<any[]>;\n  propertyList = new Array();\n  constructor(db: AngularFireDatabase){\n    let i = 0;\n    db.list('/properties').valueChanges().subscribe(res => {\n      console.info(i);\n      console.info(res);\n      this.propertyList = res;\n    });\n    \n  }\n}\n","import { environment } from './../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AngularFireDatabaseModule} from 'angularfire2/database'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.fireBase),\n    AngularFireDatabaseModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  fireBase:{\n    apiKey: \"AIzaSyA5sOcI8qwwIdiuMEPK2GMlzwdQo8Yr8sk\",\n    authDomain: \"learnangular-d1c09.firebaseapp.com\",\n    databaseURL: \"https://learnangular-d1c09.firebaseio.com\",\n    projectId: \"learnangular-d1c09\",\n    storageBucket: \"learnangular-d1c09.appspot.com\",\n    messagingSenderId: \"345718390782\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}